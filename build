#!/bin/bash
if [ "$CC" = "" ]; then
	CC="gcc"
fi

MAXWORKERS=$(nproc)
RUN=0
DEBUG=0
OPT="-O2"
WARN=""
ROOT="."
CC="$CC -fdiagnostics-color=always"
LNK="$CC -rdynamic"
CFLAGS="-pipe -fPIC"
LIBS=""
OUTBIN="server"
if git --version >/dev/null 2>&1; then
	COMMIT_SHA="-DGIT_COMMIT_SHA=\"$(git rev-parse --short HEAD)\""
fi
PLUGIN_BUILD=0
PLUGIN_INSTALL=0
SERVER_OUTROOT="$ROOT/out"
PLUGINS_DIR="$SERVER_OUTROOT/plugins"

notaplugin () {
	echo "Looks like the specified directory is not a plugin."
	exit 1;
}

waitfor () {
	wait $1
	if [ $? -ne 0 ]; then
		echo -ne "error\nCompiler errors:\n$(cat $STDERR)\n"
		exit 1
	fi
}

for a in "$@"
do
	if [ $PLUGIN_BUILD -ne 0 ]; then
		if [ -n "$PLUGIN_NAME" ]; then
			if [ "$a" == "install" ]; then
				PLUGIN_INSTALL=1
			else
				LIBS="$LIBS -l$a"
			fi
			continue
		else
			if [ ! -d "../cs-$a" ]; then notaplugin; fi
			if [ ! -d "../cs-$a/src" ]; then notaplugin; fi
			PLUGIN_NAME="$a"
			CFLAGS="$CFLAGS -DPLUGIN_BUILD -Isrc"
			LNK="$LNK -shared"
			OUTBIN="$a.so"
			ROOT="../cs-$a"
		fi
	fi
	if [ $PLUGIN_BUILD -eq 2 ]; then
		pushd "../cs-$a"
		git pull
		popd
		PLUGIN_BUILD=1
	fi
	if [ "$a" == "cls" ]; then clear; fi
	if [ "$a" == "pb" ]; then PLUGIN_BUILD=1; fi
	if [ "$a" == "pbu" ]; then PLUGIN_BUILD=2; fi
	if [ "$a" == "wall" ]; then WARN="-Wall -Wextra"; fi
	if [ "$a" == "wx" ]; then CFLAGS="$CFLAGS -Werror"; fi
	if [ "$a" == "w0" ]; then WARN="-W0"; fi
	if [ "$a" == "dbg" ]; then DEBUG=1; CFLAGS="$CFLAGS -g"; OPT="-O0"; fi
	if [ "$a" == "od" ]; then OPT="-O0"; fi
	if [[ "$a" == "run" || "$a" == "runsame" ]]; then RUN=1; fi
done

STDERR="$ROOT/out/stderr"
OUTDIR="$ROOT/out"
OBJDIR="$ROOT/objs"

if [ ! -d "$OUTDIR" ]; then mkdir $OUTDIR; fi
if [ ! -d "$OBJDIR" ]; then mkdir $OBJDIR; fi

echo -n "Compiling..."
pids=()
cnt=0

> $STDERR
for SOURCE in `find "$ROOT/src/" -type f -name "*.c"`; do
	objpath="$OBJDIR/$(basename $SOURCE .c).o"
	$CC -c $CFLAGS $COMMIT_SHA $WARN $OPT -I$ROOT/src $SOURCE -o$objpath 2>> $STDERR &
	while test $(jobs -p | wc -w) -ge "$MAXWORKERS"; do
		wait -n;
	done
	pids+=($!)
	((cnt++))
done

for pid in ${pids[@]}; do
	waitfor $pid
done

echo -ne "done\nLinking..."
if [ $PLUGIN_BUILD -eq 0 ]; then
	LIBS="$LIBS -lpthread -ldl -lz"
fi

$LNK $OBJDIR/*.o -o$OUTDIR/$OUTBIN $LIBS 2>> $STDERR &
waitfor $!

if [ $DEBUG -eq 0 ]; then
	echo -ne "done\nStripping..."
	strip $OUTDIR/$OUTBIN
fi

if [ $PLUGIN_INSTALL -eq 1 ]; then
	echo -ne "done\nCopying to plugins directory..."
	if [ ! -d "$PLUGINS_DIR" ]; then mkdir $PLUGINS_DIR; fi
	cp $OUTDIR/$OUTBIN $PLUGINS_DIR/$OUTBIN
	echo "done"
else
	echo "done"
fi

stderrlen=$(wc -c < "$STDERR")
if [ $stderrlen -gt 0 ]; then
	echo -e "Compiler stderr:\n$(cat $STDERR)"
	exit 1
fi

if [ $RUN -eq 1 ]; then
	pushd $SERVER_OUTROOT
	./server
	popd
fi

exit 0
